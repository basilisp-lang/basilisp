import basilisp.lang.keyword as kw
import basilisp.lang.symbol as sym


class SpecialForm:
    AWAIT = sym.symbol("await")
    CATCH = sym.symbol("catch")
    DEF = sym.symbol("def")
    DEFTYPE = sym.symbol("deftype*")
    DO = sym.symbol("do")
    FINALLY = sym.symbol("finally")
    FN = sym.symbol("fn*")
    IF = sym.symbol("if")
    IMPORT = sym.symbol("import*")
    INTEROP_CALL = sym.symbol(".")
    INTEROP_PROP = sym.symbol(".-")
    LET = sym.symbol("let*")
    LOOP = sym.symbol("loop*")
    QUOTE = sym.symbol("quote")
    RECUR = sym.symbol("recur")
    SET_BANG = sym.symbol("set!")
    THROW = sym.symbol("throw")
    TRY = sym.symbol("try")
    VAR = sym.symbol("var")


AMPERSAND = sym.symbol("&")

DEFAULT_COMPILER_FILE_PATH = "NO_SOURCE_PATH"

# Trimmed list of __dunder__ methods generated by using this command:
#
#     find "$(pipenv --venv)/lib/python3.6" \
#          -name '*.py' \
#          -exec egrep \
#          -oh '__[A-Za-z_][A-Za-z_0-9]*__' '{}' \; \
#          | sort | uniq
OBJECT_DUNDER_METHODS = frozenset(
    {
        "__abs__",
        "__add__",
        "__aenter__",
        "__aexit__",
        "__aiter__",
        "__await__",
        "__bytes__",
        "__call__",
        "__complex__",
        "__contains__",
        "__del__",
        "__delattr__",
        "__delitem__",
        "__delslice__",
        "__dict__",
        "__dir__",
        "__div__",
        "__divmod__",
        "__enter__",
        "__eq__",
        "__exit__",
        "__float__",
        "__floordiv__",
        "__ge__",
        "__getattr__",
        "__getattribute__",
        "__getitem__",
        "__getslice__",
        "__getstate__",
        "__gt__",
        "__hash__",
        "__iadd__",
        "__iand__",
        "__idiv__",
        "__ifloordiv__",
        "__ilshift__",
        "__imatmul__",
        "__imod__",
        "__imul__",
        "__init__",
        "__instancecheck__",
        "__int__",
        "__invert__",
        "__ior__",
        "__ipow__",
        "__isub__",
        "__iter__",
        "__itruediv__",
        "__ixor__",
        "__le__",
        "__len__",
        "__lshift__",
        "__matmul__",
        "__mod__",
        "__mul__",
        "__ne__",
        "__neg__",
        "__new__",
        "__not__",
        "__pos__",
        "__pow__",
        "__radd__",
        "__rand__",
        "__rcmp__",
        "__rdiv__",
        "__rdivmod__",
        "__reduce__",
        "__reduce_ex__",
        "__repr__",
        "__rfloordiv__",
        "__rlshift__",
        "__rmatmul__",
        "__rmod__",
        "__rmul__",
        "__rne__",
        "__ror__",
        "__round__",
        "__rpow__",
        "__rrshift__",
        "__rshift__",
        "__rsub__",
        "__rtruediv__",
        "__rxor__",
        "__setattr__",
        "__setitem__",
        "__setslice__",
        "__setstate__",
        "__str__",
        "__sub__",
        "__subclasscheck__",
        "__subclasshook__",
        "__truediv__",
        "__xor__",
    }
)

SYM_ASYNC_META_KEY = kw.keyword("async")
SYM_CLASSMETHOD_META_KEY = kw.keyword("classmethod")
SYM_DEFAULT_META_KEY = kw.keyword("default")
SYM_DYNAMIC_META_KEY = kw.keyword("dynamic")
SYM_PROPERTY_META_KEY = kw.keyword("property")
SYM_MACRO_META_KEY = kw.keyword("macro")
SYM_MUTABLE_META_KEY = kw.keyword("mutable")
SYM_NO_WARN_ON_REDEF_META_KEY = kw.keyword("no-warn-on-redef")
SYM_NO_WARN_WHEN_UNUSED_META_KEY = kw.keyword("no-warn-when-unused")
SYM_REDEF_META_KEY = kw.keyword("redef")
SYM_STATICMETHOD_META_KEY = kw.keyword("staticmethod")

ARGLISTS_KW = kw.keyword("arglists")
COL_KW = kw.keyword("col")
DOC_KW = kw.keyword("doc")
FILE_KW = kw.keyword("file")
LINE_KW = kw.keyword("line")
NAME_KW = kw.keyword("name")
NS_KW = kw.keyword("ns")
