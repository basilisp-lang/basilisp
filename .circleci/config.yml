version: 2.1

commands:
  run_pypy_tests:
    description: "Install Tox and run tests."
    parameters:
      python_version:
        description: "Required. Python version as `major.minor`."
        type: string
    steps:
      - checkout
      - restore_cache:
          key: pypy-<< parameters.python_version >>-deps3-{{ checksum "tox.ini" }}-{{ checksum "pyproject.toml" }}
      - run:
          name: Install Poetry and Tox
          command: |
            apt-get update && apt-get install -y python3 python3-distutils curl
            pip install -U pip virtualenv
            pip install tox

            # All of a sudden, the venv generated by Poetry
            # installations for pypy 3.9 and 3.10 (but not 3.8),
            # located at /root/.local, lacks all the lib*.so
            # dependencies from the original pypy environment. To
            # address this issue, we ensure these libraries are
            # explicitly accessible in the LD_LIBRARY_PATH until a
            # resolution is implemented.
            mkdir -p /root/.local/lib
            ln -s /opt/pypy/lib/lib*.so.* /root/.local/lib
            export LD_LIBRARY_PATH="/root/.local/lib:$LD_LIBRARY_PATH"
            echo 'export LD_LIBRARY_PATH="/root/.local/lib:$LD_LIBRARY_PATH"' >> $BASH_ENV

            curl -sSL https://install.python-poetry.org | python3 -
            echo 'export PATH="/root/.local/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Run Tests
          command: |
            CCI_NODE_TESTS=$(circleci tests glob "tests/**/*_test.*py" "tests/**/test_*.*py" | circleci tests split --split-by=timings)
            printf "Test files:\n"
            echo "$CCI_NODE_TESTS"
            printf "\n"
            tox run -e pypy3 -- $CCI_NODE_TESTS
          no_output_timeout: 30m
      - save_cache:
          key: pypy-<< parameters.python_version >>-deps3-{{ checksum "tox.ini" }}-{{ checksum "pyproject.toml" }}
          paths:
            - "/root/project/.tox"
            - "/usr/local/bin"
            - "/usr/local/lib/python<< parameters.python_version >>/site-packages"
      - store_test_results:
          path: junit

jobs:
  test-pypy-38:
    docker:
      - image: pypy:3.8-slim-buster
    parallelism: 8
    steps:
      - run_pypy_tests:
          python_version: "3.8"

  test-pypy-39:
    docker:
      - image: pypy:3.9-slim-bookworm
    parallelism: 8
    steps:
      - run_pypy_tests:
          python_version: "3.9"

  test-pypy-310:
    docker:
      - image: pypy:3.10-slim-bookworm
    parallelism: 8
    steps:
      - run_pypy_tests:
          python_version: "3.10"

workflows:
  version: 2
  test:
    jobs:
      - test-pypy-38
      - test-pypy-39
      - test-pypy-310
